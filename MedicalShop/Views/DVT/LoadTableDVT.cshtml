@model MedicalShop.Models.Entities.Dvt

@{
  MedicalShopContext context = new MedicalShopContext();


  NhanVien getNV(int? id)
  {
    NhanVien nv = context.NhanVien.FirstOrDefault(x => x.Id == id);
    if (nv != null) return nv;
    else return new NhanVien();
  }

  ChiNhanh getCN(int? id)
  {
    ChiNhanh cn = context.ChiNhanh.Find(id);
    if (cn != null) return cn;
    else return new ChiNhanh();
  }

}


<div id="tableDVT" style="overflow-x: auto; overflow-y: hidden; width: 100%;">
  <table class="table">
    <thead>
      <tr>
        <th>
          @Html.DisplayNameFor(model => model.MaDvt)
        </th>
        <th>
          @Html.DisplayNameFor(model => model.TenDvt)
        </th>
        <th>
          @Html.DisplayNameFor(model => model.CreatedDate)
        </th>
        <th>
          @Html.DisplayNameFor(model => model.CreatedBy)
        </th>
        <th>
          @Html.DisplayNameFor(model => model.ModifiedDate)
        </th>
        <th>
          @Html.DisplayNameFor(model => model.ModifiedBy)
        </th>
        @*<th>
          @Html.DisplayNameFor(model => model.Idcn)
        </th>*@
        <th>Tùy chọn</th>
      </tr>
    </thead>
    <tbody>
      @foreach (Dvt item in ViewBag.DVT)
      {
        @if (item.Active == false)
        {
          <tr style="background-color: #0000000a;">
            <td>
              @Html.DisplayFor(modelItem => item.MaDvt)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.TenDvt)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
              @getNV(item.CreatedBy).TenNv
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.ModifiedDate)
            </td>
            <td>
              @getNV(item.ModifiedBy).TenNv
            </td>
            <td>
              @getCN(item.Idcn).TenCn
            </td>
            <td>
              @Html.ActionLink(" ", "ViewUpdate", new { id = item.Id }, new { @class = "far fa-edit lighter" })|
              @Html.ActionLink(" ", "Restore", new { id = item.Id }, new { @class = "fas fa-reply color-black", onclick = "return confirm('Bạn muốn khôi phục đơn vị tính này?')" })
            </td>
          </tr>
        }
        else
        {
          <tr>
            <td>
              @Html.DisplayFor(modelItem => item.MaDvt)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.TenDvt)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
              @getNV(item.CreatedBy).TenNv
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.ModifiedDate)
            </td>
            <td>
              @getNV(item.ModifiedBy).TenNv
            </td>
            @*<td>
              @getCN(item.Idcn).TenCn
            </td>*@
            <td>
              @Html.ActionLink(" ", "ViewUpdate", new { id = item.Id }, new { @class = "far fa-edit lighter" })|
              @Html.ActionLink(" ", "Delete", new { id = item.Id }, new { @class = "fas fa-trash-alt lighter", onclick = "return confirm('Bạn muốn xoá đối tượng này?')" })
            </td>
          </tr>
        }
      }
    </tbody>
  </table>
</div>