@model MedicalShop.Models.Entities.Hsx

@{
  MedicalShopContext context = new MedicalShopContext();

  var acc = User.FindFirst("VaiTro");
  // int idmenu = (int)TempData["Menu"];
  int idmenu = (int)TempData.Peek("Menu");
  // TempData.Keep("Menu");
  string vaitro = null;
  bool nhap = false, sua = false, xoa = false, print = false, xuat = false, canhan = false;
  if (acc != null)
  {
    vaitro = acc.Value;
    if (vaitro != null && vaitro != "")
    {
      ChucNang cn = context.ChucNang.FirstOrDefault(c => c.Idvt.Equals(int.Parse(vaitro)) && c.Idmenu.Equals(idmenu));
      if (cn != null)
      {
        nhap = (bool)cn.Import;
        sua = (bool)cn.Update;
        xoa = (bool)cn.Delete;
        print = (bool)cn.Print;
        xuat = (bool)cn.Export;
        canhan = (bool)cn.Person;
      }
    }
  }
}


<div id="tableHSX" style="overflow-x: auto; overflow-y: hidden; width: 100%;">
  <table class="table">
    <thead>
      <tr>
        <th>
          @Html.DisplayNameFor(model => model.MaHsx)
        </th>
        <th>
          @Html.DisplayNameFor(model => model.TenHsx)
        </th>
        <th>
          @Html.DisplayNameFor(model => model.Address)
        </th>
        <th>
          @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th>
          @Html.DisplayNameFor(model => model.Mail)
        </th>
        <th>Tùy chọn</th>
      </tr>
    </thead>
    <tbody>
      @foreach (Hsx item in ViewBag.HSX)
      {
        @if (item.Active == false)
        {
          <tr style="background-color: #0000000a;">
            <td>
              @Html.DisplayFor(modelItem => item.MaHsx)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.TenHsx)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.Mail)
            </td>
            <td>
              @if (sua == true)
              {
                @Html.ActionLink(" ", "Restore", new { id = item.Id }, new { @class = "fas fa-reply color-black", onclick = "return confirm('Bạn muốn khôi phục đối tượng này?')" })
              }
              else
              {
                <button class=" btn p-0 disabled"><i class="fas fa-reply "></i></button>
              }
              @Html.ActionLink(" ", "Details", new { id = item.Id }, new { @class = "fas fa-eye lighter" }) này?')" })
            </td>
          </tr>
        }
        else
        {
          <tr>
            <td>
              @Html.DisplayFor(modelItem => item.MaHsx)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.TenHsx)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.Mail)
            </td>
            <td>
              @if (sua == true)
              {
                @Html.ActionLink(" ", "ViewUpdate", new { id = item.Id }, new { @class = "far fa-edit lighter" })
              }
              else
              {
                <button class=" btn p-0 disabled"><i class="far fa-edit"></i></button>
              }
              @Html.ActionLink(" ", "Details", new { id = item.Id }, new { @class = "fas fa-eye lighter" })
              @if (xoa == true)
              {
                @Html.ActionLink(" ", "Delete", new { id = item.Id }, new { @class = "fas fa-trash-alt lighter", onclick = "return confirm('Bạn muốn xoá đối tượng này?')" })
              }
              else
              {
                <button class=" btn p-0 disabled"><i class="fas fa-trash-alt"></i></button>
              }
            </td>
          </tr>
        }
      }
    </tbody>
  </table>
</div>
